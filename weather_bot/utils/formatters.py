from typing import Dict, Any
from datetime import datetime

def get_weather_description(weather_code: int) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–¥ –ø–æ–≥–æ–¥—ã WMO –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    
    Args:
        weather_code: –ö–æ–¥ –ø–æ–≥–æ–¥—ã WMO
        
    Returns:
        –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã
    """
    weather_descriptions = {
        0: "–Ø—Å–Ω–æ",
        1: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ",
        2: "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
        3: "–ü–∞—Å–º—É—Ä–Ω–æ",
        45: "–¢—É–º–∞–Ω",
        48: "–¢—É–º–∞–Ω —Å –∏–Ω–µ–µ–º",
        51: "–õ–µ–≥–∫–∞—è –º–æ—Ä–æ—Å—å",
        53: "–£–º–µ—Ä–µ–Ω–Ω–∞—è –º–æ—Ä–æ—Å—å",
        55: "–°–∏–ª—å–Ω–∞—è –º–æ—Ä–æ—Å—å",
        61: "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å",
        63: "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å",
        65: "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
        71: "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥",
        73: "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥",
        75: "–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥",
        80: "–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–µ–Ω—å",
        81: "–£–º–µ—Ä–µ–Ω–Ω—ã–π –ª–∏–≤–µ–Ω—å",
        82: "–°–∏–ª—å–Ω—ã–π –ª–∏–≤–µ–Ω—å",
        95: "–ì—Ä–æ–∑–∞",
        96: "–ì—Ä–æ–∑–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º –≥—Ä–∞–¥–æ–º",
        99: "–ì—Ä–æ–∑–∞ —Å —Å–∏–ª—å–Ω—ã–º –≥—Ä–∞–¥–æ–º"
    }
    
    return weather_descriptions.get(weather_code, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")

def get_weather_emoji(weather_code: int) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–æ–¥—É –ø–æ–≥–æ–¥—ã
    
    Args:
        weather_code: –ö–æ–¥ –ø–æ–≥–æ–¥—ã WMO
        
    Returns:
        –≠–º–æ–¥–∑–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
    """
    weather_emoji = {
        0: "‚òÄÔ∏è",  # –Ø—Å–Ω–æ
        1: "üå§Ô∏è",  # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ
        2: "‚õÖ",  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å
        3: "‚òÅÔ∏è",  # –ü–∞—Å–º—É—Ä–Ω–æ
        45: "üå´Ô∏è",  # –¢—É–º–∞–Ω
        48: "üå´Ô∏è‚ùÑÔ∏è",  # –¢—É–º–∞–Ω —Å –∏–Ω–µ–µ–º
        51: "üå¶Ô∏è",  # –õ–µ–≥–∫–∞—è –º–æ—Ä–æ—Å—å
        53: "üå¶Ô∏è",  # –£–º–µ—Ä–µ–Ω–Ω–∞—è –º–æ—Ä–æ—Å—å
        55: "üåßÔ∏è",  # –°–∏–ª—å–Ω–∞—è –º–æ—Ä–æ—Å—å
        61: "üåßÔ∏è",  # –ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å
        63: "üåßÔ∏è",  # –£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å
        65: "üåßÔ∏è",  # –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å
        71: "üå®Ô∏è",  # –ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥
        73: "üå®Ô∏è",  # –£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥
        75: "‚ùÑÔ∏è",  # –°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥
        80: "üå¶Ô∏è",  # –ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–µ–Ω—å
        81: "üåßÔ∏è",  # –£–º–µ—Ä–µ–Ω–Ω—ã–π –ª–∏–≤–µ–Ω—å
        82: "‚õàÔ∏è",  # –°–∏–ª—å–Ω—ã–π –ª–∏–≤–µ–Ω—å
        95: "‚õàÔ∏è",  # –ì—Ä–æ–∑–∞
        96: "‚õàÔ∏èüßä",  # –ì—Ä–æ–∑–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º –≥—Ä–∞–¥–æ–º
        99: "‚õàÔ∏èüßä"   # –ì—Ä–æ–∑–∞ —Å —Å–∏–ª—å–Ω—ã–º –≥—Ä–∞–¥–æ–º
    }
    
    return weather_emoji.get(weather_code, "‚ùì")

def format_current_weather(weather_data: Dict[str, Any], location_name: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
    
    Args:
        weather_data: –î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –æ—Ç API Open-Meteo
        location_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
    """
    current = weather_data.get("current", {})
    
    if not current:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ."
    
    temperature = current.get("temperature_2m")
    humidity = current.get("relative_humidity_2m")
    wind_speed = current.get("wind_speed_10m")
    weather_code = current.get("weather_code")
    
    weather_desc = get_weather_description(weather_code)
    emoji = get_weather_emoji(weather_code)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    current_time = current.get("time")
    if current_time:
        time_str = f"–î–∞–Ω–Ω—ã–µ –Ω–∞ {current_time}"
    else:
        time_str = "–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ"
    
    result = f"*–ü–æ–≥–æ–¥–∞ –≤ {location_name}* {emoji}\n\n"
    result += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: *{temperature}¬∞C*\n"
    result += f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
    result += f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –∫–º/—á\n"
    result += f"üîç –£—Å–ª–æ–≤–∏—è: {weather_desc}\n\n"
    result += f"_{time_str}_"
    
    return result

def format_forecast(forecast_data: Dict[str, Any], location_name: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥–Ω–æ–∑–µ –ø–æ–≥–æ–¥—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
    
    Args:
        forecast_data: –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥–Ω–æ–∑–µ –æ—Ç API Open-Meteo
        location_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–≥–Ω–æ–∑–µ
    """
    daily = forecast_data.get("daily", {})
    
    if not daily or not daily.get("time"):
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥–Ω–æ–∑–µ –ø–æ–≥–æ–¥—ã."
    
    result = f"*–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è {location_name}*\n\n"
    
    # –ù–∞–∑–≤–∞–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    weekdays = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
    
    for i in range(len(daily["time"])):
        date_str = daily["time"][i]
        max_temp = daily["temperature_2m_max"][i]
        min_temp = daily["temperature_2m_min"][i]
        precip = daily["precipitation_sum"][i]
        weather_code = daily["weather_code"][i]
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        date_obj = datetime.strptime(date_str, "%Y-%m-%d")
        weekday = weekdays[date_obj.weekday()]
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        formatted_date = date_obj.strftime("%d.%m.%Y")
        
        emoji = get_weather_emoji(weather_code)
        weather_desc = get_weather_description(weather_code)
        
        result += f"*{weekday}, {formatted_date}* {emoji}\n"
        result += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –æ—Ç *{min_temp}¬∞C* –¥–æ *{max_temp}¬∞C*\n"
        result += f"üíß –û—Å–∞–¥–∫–∏: {precip} –º–º\n"
        result += f"üîç –£—Å–ª–æ–≤–∏—è: {weather_desc}\n\n"
    
    return result